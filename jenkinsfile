pipeline {
    agent {label 'maven'}

environment {
    PATH = "/opt/apache-maven-3.9.4/bin:$PATH"
}
    stages {
        stage("build"){
            steps{
                echo "-------build started ---------"
                sh 'mvn clean deploy -Dmaven.test.skip=true'
                echo "-------build complated ---------"
            }
        }
        stage('test'){
            steps{
                echo "-------unit test started ---------"
                sh 'mvn surefire-report:report'
                echo "-------unit test complated ---------"
                sh 'printenv'
            }
        }
     /*   stage('SonarQube analysis'){
            environment{
                scannerHome = tool 'sonar-scanner'
            }

            steps{
                withSonarQubeEnv('sonar-server') {
                    sh "${scannerHome}/bin/sonar-scanner -Dsonar.scanner.metadataFilePath=${scannerHome}/bin/report-task.txt"
                }
            }
        }
        stage('Quality Gate'){
            //options {
                // Timeout counter starts BEFORE agent is allocated
            //    timeout(time: 1, unit: 'HOURS')
            //}
            steps{
                withSonarQubeEnv('sonar-server') {
                    script {
                        timeout(time: 1, unit: 'HOURS') {
                            def qg = waitForQualityGate()
                            if (qg.status != 'OK') {
                                error " Pipeline aborted duei to quality gate failure: ${qg.status}"
                            }
                        }
                    }
                }
            }
        }*/
    }
}